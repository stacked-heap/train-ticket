apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-admin-basic-info-service
spec:
  selector:
    matchLabels:
      app: ts-admin-basic-info-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-admin-basic-info-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-admin-basic-info-service
          image: codewisdom/ts-admin-basic-info-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];adminbasic.AdminBasicInfoApplication[restTemplate,main];adminbasic.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];adminbasic.controller.AdminBasicInfoController[modifyConfig,getAllPrices,modifyStation,addPrice,getAllStations,modifyPrice,home,addContacts,getAllTrains,deletePrice,deleteContacts,deleteConfig,addConfig,modifyTrain,addStation,deleteTrain,addTrain,getAllConfigs,getAllContacts,modifyContacts,deleteStation];adminbasic.service.AdminBasicInfoService[modifyConfig,modifyContact,getAllPrices,modifyStation,addPrice,addContact,getAllStations,modifyPrice,getAllTrains,deletePrice,deleteConfig,addConfig,deleteContact,modifyTrain,addStation,deleteTrain,addTrain,getAllConfigs,getAllContacts,deleteStation];adminbasic.service.AdminBasicInfoServiceImpl[modifyConfig,modifyContact,getServiceUrl,getAllPrices,modifyStation,addPrice,addContact,getAllStations,modifyPrice,getAllTrains,deletePrice,deleteConfig,addConfig,deleteContact,modifyTrain,addStation,deleteTrain,addTrain,getAllConfigs,getAllContacts,deleteStation];adminbasic.controller.AdminBasicInfoControllerTest[testGetAllStations,testGetAllConfigs,testGetAllContacts,testGetAllPrices,testAddPrice,testDeleteConfig,testAddContacts,testModifyPrice,testHome,testModifyContacts,testGetAllTrains,testAddConfig,testDeletePrice,testModifyTrain,testAddTrain,testDeleteContacts,setUp,testModifyStation,testDeleteStation,testDeleteTrain,testModifyConfig,testAddStation];adminbasic.service.AdminBasicInfoServiceImplTest[testGetAllStations,testGetAllConfigs,testGetAllContacts,testModifyContact,testGetAllPrices,testAddPrice,testDeleteConfig,testModifyPrice,testGetAllTrains,testAddConfig,testDeletePrice,testAddContact,testDeleteContact,testAddTrain,testModifyTrain,setUp,testModifyStation,testDeleteStation,testDeleteTrain,testModifyConfig,testAddStation];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18767
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18767
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-admin-order-service
spec:
  selector:
    matchLabels:
      app: ts-admin-order-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-admin-order-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-admin-order-service
          image: codewisdom/ts-admin-order-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];adminorder.AdminOrderApplication[restTemplate,main];adminorder.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];adminorder.controller.AdminOrderController[addOrder,updateOrder,deleteOrder,home,getAllOrders];adminorder.service.AdminOrderService[addOrder,updateOrder,deleteOrder,getAllOrders];adminorder.service.AdminOrderServiceImpl[getServiceUrl,addOrder,updateOrder,deleteOrder,getAllOrders];adminorder.controller.AdminOrderControllerTest[testDeleteOrder,testHome,testUpdateOrder,testGetAllOrders,testAddOrder,setUp];adminorder.service.AdminOrderServiceImplTest[testDeleteOrder2,testDeleteOrder1,testAddOrder2,testGetAllOrders1,testAddOrder1,setUp,testUpdateOrder1,testUpdateOrder2,testGetAllOrders2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16112
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16112
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-admin-route-service
spec:
  selector:
    matchLabels:
      app: ts-admin-route-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-admin-route-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-admin-route-service
          image: codewisdom/ts-admin-route-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];adminroute.AdminRouteApplication[restTemplate,main];adminroute.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];adminroute.controller.AdminRouteController[addRoute,deleteRoute,getAllRoutes,home];adminroute.service.AdminRouteService[createAndModifyRoute,deleteRoute,getAllRoutes];adminroute.service.AdminRouteServiceImpl[getServiceUrl,checkStationsExists,createAndModifyRoute,deleteRoute,getAllRoutes];adminroute.controller.AdminRouteControllerTest[testHome,testGetAllRoutes,testDeleteRoute,setUp,testAddRoute];adminroute.service.AdminRouteServiceImplTest[testGetAllRoutes,testDeleteRoute,setUp,testCreateAndModifyRoute];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16113
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16113
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-admin-travel-service
spec:
  selector:
    matchLabels:
      app: ts-admin-travel-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-admin-travel-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-admin-travel-service
          image: codewisdom/ts-admin-travel-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];admintravel.AdminTravelApplication[restTemplate,main];admintravel.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];admintravel.controller.AdminTravelController[addTravel,updateTravel,deleteTravel,getAllTravels,home];admintravel.service.AdminTravelService[addTravel,updateTravel,deleteTravel,getAllTravels];admintravel.service.AdminTravelServiceImpl[checkTravelInfo,getServiceUrl,getRouteByRouteId,addTravel,updateTravel,checkStationsExists,deleteTravel,queryTrainTypeByName,getAllTravels];admintravel.controller.AdminTravelControllerTest[testAddTravel,testHome,testGetAllTravels,setUp,testUpdateTravel,testDeleteTravel];admintravel.service.AdminTravelServiceImplTest[testDeleteTravel2,testDeleteTravel1,testGetAllTravels2,setUp,testGetAllTravels1,testAddTravel4,testAddTravel3,testAddTravel2,testUpdateTravel2,testAddTravel1,testUpdateTravel1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16114
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16114
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-admin-user-service
spec:
  selector:
    matchLabels:
      app: ts-admin-user-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-admin-user-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-admin-user-service
          image: codewisdom/ts-admin-user-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];adminuser.AdminUserApplication[restTemplate,main];adminuser.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];adminuser.controller.AdminUserController[getAllUsers,addUser,deleteUser,updateUser,home];adminuser.service.AdminUserService[getAllUsers,addUser,deleteUser,updateUser];adminuser.service.AdminUserServiceImpl[getAllUsers,getServiceUrl,addUser,deleteUser,updateUser];adminuser.controller.AdminUserControllerTest[testHome,testGetAllUsers,testDeleteUser,testUpdateUser,setUp,testAddUser];adminuser.service.AdminUserServiceImplTest[testGetAllUsers,testDeleteUser,testUpdateUser,setUp,testAddUser];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16115
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16115
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-service
spec:
  selector:
    matchLabels:
      app: ts-assurance-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-assurance-service
          image: codewisdom/ts-assurance-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];assurance.AssuranceApplication[restTemplate,main];assurance.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];assurance.controller.AssuranceController[getAllAssuranceType,createNewAssurance,modifyAssurance,deleteAssuranceByOrderId,getAllAssurances,findAssuranceByOrderId,deleteAssurance,getAssuranceById,home];assurance.init.InitData[run];assurance.repository.AssuranceRepository[findById,findByOrderId,deleteById,removeAssuranceByOrderId,findAll];assurance.service.AssuranceService[deleteByOrderId,modify,findAssuranceById,findAssuranceByOrderId,deleteById,getAllAssurances,create,getAllAssuranceTypes];assurance.service.AssuranceServiceImpl[deleteByOrderId,modify,findAssuranceById,findAssuranceByOrderId,deleteById,getAllAssurances,create,getAllAssuranceTypes];assurance.controller.AssuranceControllerTest[testHome,testCreateNewAssurance,testGetAssuranceById,testModifyAssurance,testGetAllAssuranceType,testFindAssuranceByOrderId,setUp,testDeleteAssurance,testDeleteAssuranceByOrderId,testGetAllAssurances];assurance.service.AssuranceServiceImplTest[tesCreate2,testCreate3,testCreate1,testGetAllAssurances1,testGetAllAssurances2,testFindAssuranceByOrderId1,testFindAssuranceByOrderId2,testDeleteByOrderId1,testDeleteByOrderId2,testFindAssuranceById2,testFindAssuranceById1,setUp,testModify3,testModify2,testDeleteById1,testGetAllAssuranceTypes,testDeleteById2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-assurance-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18888
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18888
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-service
spec:
  selector:
    matchLabels:
      app: ts-auth-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-auth-service
          image: codewisdom/ts-auth-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];auth.AuthApplication[restTemplate,main];auth.config.WebSecurityConfig[passwordEncoder,authenticationManager,configureAuthentication,corsConfigurer,configure];auth.controller.AuthController[createDefaultUser];auth.controller.UserController[getToken,getAllUser,deleteUserById];auth.exception.handler.GlobalExceptionHandler[handleUserNotFoundException];auth.init.InitUser[run];auth.repository.UserRepository[findByUsername,deleteByUserId];auth.security.jwt.JWTProvider[init,createToken];auth.security.UserDetailsServiceImpl[loadUserByUsername];auth.service.impl.TokenServiceImpl[getServiceUrl,getToken];auth.service.impl.UserServiceImpl[getAllUser,checkUserCreateInfo,saveUser,createDefaultAuthUser,deleteByUserId];auth.service.TokenService[getToken];auth.service.UserService[getAllUser,saveUser,createDefaultAuthUser,deleteByUserId];auth.controller.AuthControllerTest[testGetHello,setUp,testCreateDefaultUser];auth.controller.UserControllerTest[testGetHello,testGetAllUser,setUp,testDeleteUserById,testGetToken];auth.service.TokenServiceImplTest[setUp,testGetToken1,testGetToken2];auth.service.UserServiceImplTest[testSaveUser,testGetAllUser,setUp,testDeleteByUserId,testCreateDefaultAuthUser];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-auth-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12340
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12340
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-avatar-service
spec:
  selector:
    matchLabels:
      app: ts-avatar-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-avatar-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-avatar-service
          image:  codewisdom/ts-avatar-service:0.2.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: 
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 17001
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 17001
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-basic-service
spec:
  selector:
    matchLabels:
      app: ts-basic-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-basic-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-basic-service
          image: codewisdom/ts-basic-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];fdse.microservice.BasicApplication[restTemplate,main];fdse.microservice.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];fdse.microservice.controller.BasicController[queryForStationId,queryForTravel,queryForTravels,home];fdse.microservice.service.BasicService[queryForStationId,queryForTravel,queryForTravels];fdse.microservice.service.BasicServiceImpl[getServiceUrl,checkStationExists,getRouteByRouteId,queryForStationId,checkStationsExists,getRoutesByRouteIds,queryPriceConfigByRouteIdsAndTrainTypes,queryPriceConfigByRouteIdAndTrainType,queryTrainTypeByName,queryForTravel,queryForTravels,queryTrainTypeByNames];fdse.microservice.controller.BasicControllerTest[testHome,testQueryForStationId,testQueryForTravel,setUp];fdse.microservice.service.BasicServiceImplTest[testQueryForStationId,testQueryForTravel,testCheckStationExists,testQueryTrainType,setUp];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 15680
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 15680
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-cancel-service
spec:
  selector:
    matchLabels:
      app: ts-cancel-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-cancel-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-cancel-service
          image: codewisdom/ts-cancel-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];cancel.CancelApplication[restTemplate,main];cancel.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];cancel.controller.CancelController[cancelTicket,calculate,home];cancel.service.CancelService[cancelOrder,calculateRefund];cancel.service.CancelServiceImpl[getOrderByIdFromOrderOther,getServiceUrl,sendEmail,cancelFromOrder,cancelOrder,getAccount,cancelFromOtherOrder,calculateRefund,getAuthorizationHeadersFrom,getOrderByIdFromOrder,drawbackMoney];cancel.controller.CancelControllerTest[testHome,testCancelTicket,testCalculate,setUp];cancel.service.CancelServiceImplTest[testCancelOrder2,testSendEmail,testCalculateRefund1,testCalculateRefund2,testGetAccount,setUp,testDrawbackMoney,testCancelOrder1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18885
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18885
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-service
spec:
  selector:
    matchLabels:
      app: ts-config-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-config-service
          image: codewisdom/ts-config-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];config.ConfigApplication[restTemplate,main];config.controller.ConfigController[deleteConfig,updateConfig,retrieve,createConfig,queryAll,home];config.init.InitData[run];config.repository.ConfigRepository[findByName,deleteByName,findAll];config.SecurityConfig[passwordEncoder,corsConfigurer,configure];config.service.ConfigService[query,create,update,queryAll,delete];config.service.ConfigServiceImpl[query,create,update,queryAll,delete];config.controller.ConfigControllerTest[testHome,testQueryAll,testRetrieve,setUp,testCreateConfig,testUpdateConfig,testDeleteConfig];config.service.ConfigServiceImplTest[testQuery1,testCreate2,testCreate1,testQuery2,testUpdate1,testDelete2,testUpdate2,testDelete1,testQueryAll2,setUp,testQueryAll1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-config-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 15679
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 15679
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-service
spec:
  selector:
    matchLabels:
      app: ts-consign-price-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-consign-price-service
          image: codewisdom/ts-consign-price-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];consignprice.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];consignprice.ConsignPriceApplication[restTemplate,main];consignprice.controller.ConsignPriceController[getPriceInfo,modifyPriceConfig,getPriceByWeightAndRegion,getPriceConfig,home];consignprice.init.InitData[run];consignprice.repository.ConsignPriceConfigRepository[findByIndex];consignprice.service.ConsignPriceService[queryPriceInformation,createAndModifyPrice,getPriceByWeightAndRegion,getPriceConfig];consignprice.service.ConsignPriceServiceImpl[queryPriceInformation,createAndModifyPrice,getPriceByWeightAndRegion,getPriceConfig];consignprice.controller.ConsignPriceControllerTest[testHome,testGetPriceConfig,testModifyPriceConfig,setUp,testGetPriceInfo,testGetPriceByWeightAndRegion];consignprice.service.ConsignPriceServiceImplTest[testQueryPriceInformation,testCreateAndModifyPrice2,testCreateAndModifyPrice1,testGetPriceConfig,testGetPriceByWeightAndRegion2,setUp,testGetPriceByWeightAndRegion1,testGetPriceByWeightAndRegion3];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-consign-price-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16110
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16110
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-service
spec:
  selector:
    matchLabels:
      app: ts-consign-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-consign-service
          image: codewisdom/ts-consign-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];consign.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];consign.ConsignApplication[restTemplate,main];consign.controller.ConsignController[findByAccountId,findByOrderId,updateConsign,home,insertConsign,findByConsignee];consign.init.InitData[run];consign.repository.ConsignRepository[findByAccountId,findByOrderId,findById,findByConsignee];consign.service.ConsignService[updateConsignRecord,queryByConsignee,queryByAccountId,queryByOrderId,insertConsignRecord];consign.service.ConsignServiceImpl[getServiceUrl,updateConsignRecord,queryByConsignee,queryByAccountId,queryByOrderId,insertConsignRecord];consign.controller.ConsignControllerTest[testHome,testFindByConsignee,testUpdateConsign,testFindByOrderId,setUp,testInsertConsign,testFindByAccountId];consign.service.ConsignServiceImplTest[testQueryByConsignee1,testUpdateConsignRecord1,testUpdateConsignRecord2,testInsertConsignRecord,testQueryByAccountId1,setUp,testQueryByAccountId2,testQueryByOrderId1,testQueryByOrderId2,testQueryByConsignee2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-consign-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16111
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16111
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-service
spec:
  selector:
    matchLabels:
      app: ts-contacts-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-contacts-service
          image: codewisdom/ts-contacts-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];contacts.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];contacts.ContactsApplication[restTemplate,main];contacts.controller.ContactsController[deleteContacts,createNewContactsAdmin,createNewContacts,findContactsByAccountId,getAllContacts,modifyContacts,home,getContactsByContactsId];contacts.entity.Contacts[hashCode,equals];contacts.init.InitData[run];contacts.repository.ContactsRepository[findByAccountId,findById,deleteById,findAll,findByAccountIdAndDocumentTypeAndDocumentType];contacts.service.ContactsService[modify,createContacts,create,findContactsById,findContactsByAccountId,delete,getAllContacts];contacts.service.ContactsServiceImpl[modify,createContacts,create,findContactsById,findContactsByAccountId,delete,getAllContacts];contacts.controller.ContactsControllerTest[testHome,testCreateNewContacts,testModifyContacts,testGetContactsByContactsId,testFindContactsByAccountId,testGetAllContacts,testDeleteContacts,setUp,testCreateNewContactsAdmin];contacts.service.ContactsServiceImplTest[testCreate2,testCreate1,testGetAllContacts2,testFindContactsByAccountId,testGetAllContacts1,testFindContactsById1,testFindContactsById2,testCreateContacts2,testDelete2,testCreateContacts1,testDelete1,testModify1,setUp,testModify2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-contacts-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12347
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12347
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-delivery-service
spec:
  selector:
    matchLabels:
      app: ts-delivery-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-delivery-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-delivery-service
          image: codewisdom/ts-delivery-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];delivery.config.Queues[emailQueue];delivery.DeliveryApplication[restTemplate,main];delivery.mq.RabbitReceive[process];delivery.repository.DeliveryRepository[findById,findByOrderId,deleteById,deleteFoodOrderByOrderId,findAll];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-delivery-mysql
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 18808
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18808
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-execute-service
spec:
  selector:
    matchLabels:
      app: ts-execute-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-execute-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-execute-service
          image: codewisdom/ts-execute-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];execute.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];execute.controller.ExecuteControlller[executeTicket,collectTicket,home];execute.ExecuteApplication[restTemplate,main];execute.serivce.ExecuteService[ticketExecute,ticketCollect];execute.serivce.ExecuteServiceImpl[ticketExecute,getOrderByIdFromOrderOther,getServiceUrl,executeOrder,ticketCollect,executeOrderOther,getOrderByIdFromOrder];execute.controller.ExecuteControlllerTest[testHome,testExecuteTicket,testCollectTicket,setUp];execute.service.ExecuteServiceImplTest[testTicketExecute2,testTicketExecute1,setUp,testTicketCollect2,testTicketCollect1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12386
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12386
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-delivery-service
spec:
  selector:
    matchLabels:
      app: ts-food-delivery-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-delivery-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-food-delivery-service
          image: codewisdom/ts-food-delivery-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];food_delivery.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];food_delivery.controller.FoodDeliveryController[createFoodDeliveryOrder,updateTripId,updateSeatNo,updateDeliveryTime,getAllFoodDeliveryOrders,deleteFoodDeliveryOrder,getFoodDeliveryOrderById,home,getFoodDeliveryOrderByStoreId];food_delivery.FoodDeliveryApplication[restTemplate,main];food_delivery.init.InitData[run];food_delivery.repository.FoodDeliveryOrderRepository[findByStationFoodStoreId,findAll];food_delivery.service.FoodDeliveryService[createFoodDeliveryOrder,updateTripId,updateSeatNo,updateDeliveryTime,getAllFoodDeliveryOrders,deleteFoodDeliveryOrder,getFoodDeliveryOrderById,getFoodDeliveryOrderByStoreId];food_delivery.service.FoodDeliveryServiceImpl[createFoodDeliveryOrder,updateTripId,getServiceUrl,updateSeatNo,updateDeliveryTime,getAllFoodDeliveryOrders,deleteFoodDeliveryOrder,getFoodDeliveryOrderById,getFoodDeliveryOrderByStoreId];food_delivery.controller.FoodDeliveryControllerTest[testCreateFoodDeliveryOrder,testHome,testGetFoodDeliveryOrderById,testGetFoodDeliveryOrderByStoreId,testDeleteFoodDeliveryOrder,testUpdateTripId,testUpdateDeliveryTime,setUp,testGetAllFoodDeliveryOrders,testUpdateSeatNo];food_delivery.service.FoodDeliveryServiceImplTest[setUp];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-food-delivery-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18957
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18957
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-service
spec:
  selector:
    matchLabels:
      app: ts-food-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-food-service
          image: codewisdom/ts-food-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];foodsearch.config.Queues[emailQueue];foodsearch.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];foodsearch.controller.FoodController[findAllFoodOrder,getAllFood,createFoodBatches,deleteFoodOrder,findFoodOrderByOrderId,createFoodOrder,home,test_send_delivery,updateFoodOrder];foodsearch.FoodApplication[restTemplate,main];foodsearch.mq.RabbitSend[send];foodsearch.repository.FoodOrderRepository[findById,findByOrderId,deleteById,deleteFoodOrderByOrderId,findAll];foodsearch.service.FoodService[createFoodOrdersInBatch,findAllFoodOrder,getAllFood,findByOrderId,deleteFoodOrder,createFoodOrder,updateFoodOrder];foodsearch.service.FoodServiceImpl[createFoodOrdersInBatch,findAllFoodOrder,getAllFood,getServiceUrl,findByOrderId,deleteFoodOrder,createFoodOrder,updateFoodOrder];adminorder.controller.FoodControllerTest[testHome,testUpdateFoodOrder,testGetAllFood,testFindAllFoodOrder,testCreateFoodOrder,setUp,testDeleteFoodOrder,testFindFoodOrderByOrderId];adminorder.service.FoodServiceImplTest[testFindAllFoodOrder1,testGetAllFood,testCreateFoodOrder2,testCreateFoodOrder1,testUpdateFoodOrder1,testFindByOrderId2,setUp,testUpdateFoodOrder2,testFindByOrderId1,testDeleteFoodOrder2,testDeleteFoodOrder1,testFindAllFoodOrder2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
            - secretRef:
                name: ts-food-mysql
          ports:
            - containerPort: 18856
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18856
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-gateway-service
spec:
  selector:
    matchLabels:
      app: ts-gateway-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-gateway-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-gateway-service
          image: codewisdom/ts-gateway-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];gateway.GatewayApplication[main];gateway.GatewayConfiguration[initGatewayRules,initBlockHandlers,sentinelGatewayFilter,doInit,sentinelGatewayBlockExceptionHandler];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18888
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 4000m
              memory: 4000Mi
          readinessProbe:
            tcpSocket:
              port: 18888
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-service
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-inside-payment-service
          image: codewisdom/ts-inside-payment-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];inside_payment.async.AsyncTask[sendAsyncCallToPaymentService];inside_payment.async.ExecutorConfig[myAsync,mySimpleAsync];inside_payment.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];inside_payment.controller.InsidePaymentController[payDifference,drawBack,queryAccount,queryAddMoney,pay,addMoney,createAccount,queryPayment,home];inside_payment.init.InitData[run];inside_payment.InsidePaymentApplication[restTemplate,main];inside_payment.repository.AddMoneyRepository[findByUserId,findAll];inside_payment.repository.PaymentRepository[findById,findByOrderId,findByUserId,findAll];inside_payment.service.InsidePaymentService[payDifference,drawBack,queryAccount,queryAddMoney,pay,addMoney,createAccount,queryPayment,initPayment];inside_payment.service.InsidePaymentServiceImpl[getServiceUrl,payDifference,drawBack,queryAccount,queryAddMoney,pay,addMoney,setOrderStatus,createAccount,queryPayment,initPayment];inside_payment.util.CookieUtil[readCookieMap,addCookie,getCookieByName];inside_payment.controller.InsidePaymentControllerTest[testPay,testCreateAccount,testHome,testQueryAccount,testPayDifference,testQueryAddMoney,setUp,testAddMoney,testQueryPayment,testDrawBack];inside_payment.service.InsidePaymentServiceImplTest[testPay,testCreateAccount2,testCreateAccount1,testQueryAddMoney1,testQueryAddMoney2,testQueryPayment2,testQueryAccount,testQueryPayment1,testInitPayment1,testAddMoney1,testAddMoney2,testInitPayment2,testPayDifference,setUp,testDrawBack2,testDrawBack1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-inside-payment-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18673
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18673
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-news-service
spec:
  selector:
    matchLabels:
      app: ts-news-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-news-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-news-service
          image: codewisdom/ts-news-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: 
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12862
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12862
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-notification-service
spec:
  selector:
    matchLabels:
      app: ts-notification-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-notification-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-notification-service
          image: codewisdom/ts-notification-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];notification.config.Queues[emailQueue];notification.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];notification.controller.NotificationController[order_create_success,order_cancel_success,test_send_mail,order_changed_success,test_send,home,preserve_success];notification.mq.RabbitReceive[process];notification.mq.RabbitSend[send];notification.NotificationApplication[restTemplate,main];notification.repository.NotifyRepository[findById,deleteById,findAll];notification.service.MailService[sendEmail];notification.service.NotificationService[orderChangedSuccess,preserveSuccess,orderCreateSuccess,orderCancelSuccess];notification.service.NotificationServiceImpl[orderChangedSuccess,preserveSuccess,orderCreateSuccess,orderCancelSuccess];notification.controller.NotificationControllerTest[testHome,testOrderChangedSuccess,testOrderCreateSuccess,setUp,testPreserveSuccess,testOrderCancelSuccess];notification.service.NotificationServiceImplTest[testOrderCreateSuccess2,testOrderChangedSuccess2,testOrderCreateSuccess1,testOrderChangedSuccess1,testPreserveSuccess1,testPreserveSuccess2,setUp,testOrderCancelSuccess2,testOrderCancelSuccess1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-notification-mysql
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 17853
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 17853
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-service
spec:
  selector:
    matchLabels:
      app: ts-order-other-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-order-other-service
          image: codewisdom/ts-order-other-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];other.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];other.controller.OrderOtherController[findAllOrder,getOrderById,modifyOrder,updateOrder,addcreateNewOrder,calculateSoldTicket,getTicketListByDateAndTripId,home,payOrder,securityInfoCheck,queryOrders,getOrderPrice,queryOrdersForRefresh,createNewOrder,saveOrderInfo,deleteOrder];other.entity.Order[hashCode,equals];other.entity.QueryInfo[enableBoughtDateQuery,enableTravelDateQuery,enableStateQuery,disableStateQuery,disableTravelDateQuery,disableBoughtDateQuery];other.init.InitData[run];other.OrderOtherApplication[restTemplate,main];other.repository.OrderOtherRepository[findByAccountId,findById,findByTravelDateAndTrainNumber,deleteById,findAll];other.service.OrderOtherService[getSoldTickets,cancelOrder,getOrderById,modifyOrder,queryAlreadySoldOrders,updateOrder,addNewOrder,payOrder,getAllOrders,saveChanges,queryOrders,getOrderPrice,queryOrdersForRefresh,create,deleteOrder,findOrderById,alterOrder,checkSecurityAboutOrder,initOrder];other.service.OrderOtherServiceImpl[getSoldTickets,getServiceUrl,cancelOrder,getOrderById,queryAlreadySoldOrders,modifyOrder,updateOrder,addNewOrder,getAllOrders,payOrder,saveChanges,queryOrders,getOrderPrice,queryOrdersForRefresh,queryForStationId,create,deleteOrder,findOrderById,initOrder,alterOrder,checkSecurityAboutOrder];other.controller.OrderOtherControllerTest[testQueryOrdersForRefresh,testDeleteOrder,testAddCreateNewOrder,testFindAllOrder,testPayOrder,testModifyOrder,testGetOrderPrice,testQueryOrders,testGetTicketListByDateAndTripId,testHome,testCalculateSoldTicket,testUpdateOrder,testSecurityInfoCheck,testCreateNewOrder,testSaveOrderInfo,setUp,testGetOrderById];other.service.OrderOtherServiceImplTest[testQueryOrdersForRefresh,testGetOrderById1,testGetOrderById2,testUpdateOrder1,testQueryOrders,testUpdateOrder2,testFindOrderById1,testFindOrderById2,testAlterOrder2,testQueryAlreadySoldOrders,testDeleteOrder2,testQueryForStationId,testDeleteOrder1,testGetSoldTickets2,testGetOrderPrice1,testGetSoldTickets1,testGetOrderPrice2,setUp,testAlterOrder1,testSaveChanges2,testCancelOrder2,testSaveChanges1,testModifyOrder2,testCreate2,testGetAllOrders1,testCreate1,testInitOrder2,testInitOrder1,testAddNewOrder2,testAddNewOrder1,testCheckSecurityAboutOrder,testPayOrder2,testPayOrder1,testGetAllOrders2,testModifyOrder1,testCancelOrder1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-order-other-mysql
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 12032
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12032
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-service
spec:
  selector:
    matchLabels:
      app: ts-order-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-order-service
          image: codewisdom/ts-order-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];order.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];order.controller.OrderController[findAllOrder,getOrderById,modifyOrder,updateOrder,addcreateNewOrder,calculateSoldTicket,getTicketListByDateAndTripId,home,payOrder,securityInfoCheck,queryOrders,getOrderPrice,queryOrdersForRefresh,createNewOrder,saveOrderInfo,deleteOrder];order.entity.Order[hashCode,equals];order.entity.OrderInfo[enableBoughtDateQuery,enableTravelDateQuery,enableStateQuery,disableStateQuery,disableTravelDateQuery,disableBoughtDateQuery];order.init.InitData[run];order.OrderApplication[restTemplate,main];order.repository.OrderRepository[findByAccountId,findById,findByTravelDateAndTrainNumber,deleteById,findAll];order.service.OrderService[getSoldTickets,cancelOrder,getOrderById,queryAlreadySoldOrders,modifyOrder,updateOrder,addNewOrder,getAllOrders,payOrder,saveChanges,queryOrders,getOrderPrice,queryOrdersForRefresh,create,deleteOrder,findOrderById,alterOrder,checkSecurityAboutOrder,initOrder];order.service.OrderServiceImpl[getSoldTickets,getServiceUrl,cancelOrder,getOrderById,queryAlreadySoldOrders,modifyOrder,updateOrder,addNewOrder,getAllOrders,payOrder,saveChanges,queryOrders,getOrderPrice,queryOrdersForRefresh,queryForStationId,create,deleteOrder,findOrderById,alterOrder,initOrder,checkSecurityAboutOrder];order.controller.OrderControllerTest[testQueryOrdersForRefresh,testDeleteOrder,testAddCreateNewOrder,testFindAllOrder,testPayOrder,testModifyOrder,testGetOrderPrice,testQueryOrders,testGetTicketListByDateAndTripId,testHome,testCalculateSoldTicket,testUpdateOrder,testSecurityInfoCheck,testCreateNewOrder,testSaveOrderInfo,setUp,testGetOrderById];order.service.OrderServiceImplTest[testQueryOrdersForRefresh,testGetOrderById1,testGetOrderById2,testUpdateOrder1,testQueryOrders,testUpdateOrder2,testFindOrderById1,testFindOrderById2,testAlterOrder2,testQueryAlreadySoldOrders,testDeleteOrder2,testQueryForStationId,testDeleteOrder1,testGetSoldTickets2,testGetOrderPrice1,testGetSoldTickets1,testGetOrderPrice2,setUp,testAlterOrder1,testSaveChanges2,testCancelOrder2,testSaveChanges1,testModifyOrder2,testCreate2,testGetAllOrders1,testCreate1,testInitOrder2,testInitOrder1,testAddNewOrder2,testAddNewOrder1,testCheckSecurityAboutOrder,testPayOrder2,testPayOrder1,testGetAllOrders2,testModifyOrder1,testCancelOrder1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-order-mysql
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 12031
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12031
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-service
spec:
  selector:
    matchLabels:
      app: ts-payment-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-payment-service
          image: codewisdom/ts-payment-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];com.trainticket.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];com.trainticket.controller.PaymentController[query,pay,addMoney,home];com.trainticket.init.InitData[run];com.trainticket.PaymentApplication[restTemplate,main];com.trainticket.repository.PaymentRepository[findById,findByOrderId,findByUserId,findAll];com.trainticket.service.PaymentService[query,pay,addMoney,initPayment];com.trainticket.service.PaymentServiceImpl[query,pay,addMoney,initPayment];com.trainticket.controller.PaymentControllerTest[testPay,testHome,testQuery,setUp,testAddMoney];com.trainticket.service.PaymentServiceImplTest[testInitPayment1,testQuery1,testInitPayment2,testQuery2,testPay1,setUp,testAddMoney,testPay2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-payment-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 19001
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 19001
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-preserve-other-service
spec:
  selector:
    matchLabels:
      app: ts-preserve-other-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-preserve-other-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-preserve-other-service
          image: codewisdom/ts-preserve-other-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];preserveOther.config.Queues[emailQueue];preserveOther.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];preserveOther.controller.PreserveOtherController[preserve,home];preserveOther.mq.RabbitSend[send];preserveOther.PreserveOtherApplication[restTemplate,main];preserveOther.service.PreserveOtherService[preserve];preserveOther.service.PreserveOtherServiceImpl[createOrder,getServiceUrl,getTripAllDetailInformation,preserve,createFoodOrder,sendEmail,addAssuranceForOrder,dipatchSeat,queryForStationId,getAccount,checkSecurity,getContactsById,createConsign];preserveOther.controller.PreserveOtherControllerTest[testHome,testPreserve,setUp];preserveOther.service.PreserveOtherServiceImplTest[testSendEmail,testPreserve,testGetAccount,setUp,testDipatchSeat];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 14569
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 14569
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-preserve-service
spec:
  selector:
    matchLabels:
      app: ts-preserve-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-preserve-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-preserve-service
          image: codewisdom/ts-preserve-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];preserve.config.Queues[emailQueue];preserve.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];preserve.controller.PreserveController[preserve,home];preserve.mq.RabbitSend[send];preserve.PreserveApplication[restTemplate,main];preserve.service.PreserveService[preserve];preserve.service.PreserveServiceImpl[createOrder,getServiceUrl,getTripAllDetailInformation,preserve,createFoodOrder,sendEmail,addAssuranceForOrder,dipatchSeat,queryForStationId,getAccount,checkSecurity,getContactsById,createConsign];preserve.controller.PreserveControllerTest[testHome,testPreserve,setUp];preserve.service.PreserveServiceImplTest[testSendEmail,testPreserve,testGetAccount,setUp,testDipatchSeat];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 14568
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 14568
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-service
spec:
  selector:
    matchLabels:
      app: ts-price-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-price-service
          image: codewisdom/ts-price-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];price.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];price.controller.PriceController[query,create,update,queryAll,delete,home];price.init.InitData[run];price.PriceApplication[restTemplate,main];price.repository.PriceConfigRepository[findById,findByRouteIdsAndTrainTypes,findByRouteIdAndTrainType,findAll];price.service.PriceService[findAllPriceConfig,updatePriceConfig,findById,createNewPriceConfig,deletePriceConfig,findByRouteIdsAndTrainTypes,findByRouteIdAndTrainType];price.service.PriceServiceImpl[findAllPriceConfig,updatePriceConfig,findById,createNewPriceConfig,deletePriceConfig,findByRouteIdsAndTrainTypes,findByRouteIdAndTrainType];price.controller.PriceControllerTest[testHome,testDelete,testQueryAll,testQuery,testCreate,setUp,testUpdate];price.service.PriceServiceImplTest[testFindAllPriceConfig2,testFindAllPriceConfig1,testUpdatePriceConfig2,setUp,testDeletePriceConfig1,testCreateNewPriceConfig2,testFindByRouteIdAndTrainType1,testCreateNewPriceConfig1,testFindByRouteIdAndTrainType2,testUpdatePriceConfig1,testFindById,testDeletePriceConfig2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-price-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16579
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16579
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-rebook-service
spec:
  selector:
    matchLabels:
      app: ts-rebook-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-rebook-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-rebook-service
          image: codewisdom/ts-rebook-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];rebook.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];rebook.controller.RebookController[payDifference,rebook,home];rebook.RebookApplication[restTemplate,main];rebook.service.RebookService[payDifference,rebook];rebook.service.RebookServiceImpl[createOrder,getServiceUrl,getRouteByRouteId,getTripAllDetailInformation,tripGD,queryTrainTypeByName,drawBackMoney,updateOrder,dipatchSeat,payDifference,checkTime,rebook,getOrderByRebookInfo,payDifferentMoney,deleteOrder,getAuthorizationHeadersFrom];rebook.controller.RebookControllerTest[testHome,testRebook,testPayDifference,setUp];rebook.service.RebookServiceImplTest[testRebook,testPayDifference,setUp,testDipatchSeat];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
            - configMapRef:
                name: rabbitmq
          ports:
            - containerPort: 18886
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18886
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-plan-service
spec:
  selector:
    matchLabels:
      app: ts-route-plan-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-plan-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-route-plan-service
          image: codewisdom/ts-route-plan-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];plan.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];plan.controller.RoutePlanController[getQuickestRoutes,getCheapestRoutes,getMinStopStations,home];plan.RoutePlanApplication[restTemplate,main];plan.service.RoutePlanService[searchQuickestResult,searchMinStopStations,searchCheapestResult];plan.service.RoutePlanServiceImpl[searchQuickestResult,getServiceUrl,getRouteByRouteId,getTripFromHighSpeedTravelServive,getStationList,searchMinStopStations,searchCheapestResult,getTripFromNormalTrainTravelService];plan.controller.RoutePlanControllerTest[testHome,testGetCheapestRoutes,setUp,testGetQuickestRoutes,testGetMinStopStations];plan.service.RoutePlanServiceImplTest[testSearchMinStopStations,setUp,testSearchQuickestResult,testSearchCheapestResult];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 14578
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 14578
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-service
spec:
  selector:
    matchLabels:
      app: ts-route-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-route-service
          image: codewisdom/ts-route-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];route.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];route.controller.RouteController[queryByStartAndTerminal,createAndModifyRoute,deleteRoute,queryByIds,queryAll,home,queryById];route.init.InitData[run];route.repository.RouteRepository[findByIds,findByStartStationAndEndStation,removeRouteById,findById,findAll];route.RouteApplication[restTemplate,main];route.service.RouteService[getRouteById,getRouteByStartAndEnd,deleteRoute,getAllRoutes,getRouteByIds,createAndModify];route.service.RouteServiceImpl[getRouteById,deleteRoute,getRouteByStartAndEnd,getAllRoutes,createAndModify,getRouteByIds];route.controller.RouteControllerTest[testQueryByStartAndTerminal,testHome,testQueryAll,testDeleteRoute,testQueryById,setUp,testCreateAndModifyRoute];route.service.RouteServiceImplTest[testCreateAndModify2,testCreateAndModify1,testDeleteRoute2,setUp,testDeleteRoute1,testGetRouteByStartAndTerminal2,testGetAllRoutes1,testGetRouteByStartAndTerminal1,testGetAllRoutes2,testGetRouteById2,testCreateAndModify3,testGetRouteById1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-route-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 11178
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 11178
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-seat-service
spec:
  selector:
    matchLabels:
      app: ts-seat-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-seat-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-seat-service
          image: codewisdom/ts-seat-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];seat.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];seat.controller.SeatController[getLeftTicketOfInterval,create,home];seat.SeatApplication[restTemplate,main];seat.service.SeatService[getLeftTicketOfInterval,distributeSeat];seat.service.SeatServiceImpl[getServiceUrl,getLeftTicketOfInterval,getDirectProportion,isContained,distributeSeat];seat.controller.SeatControllerTest[testHome,testCreate,testGetLeftTicketOfInterval,setUp];seat.service.SeatServiceImplTest[testGetLeftTicketOfInterval,setUp,testDistributeSeat1,testGetLeftTicketOfInterva2,testDistributeSeat2];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18898
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18898
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-service
spec:
  selector:
    matchLabels:
      app: ts-security-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-security-service
          image: codewisdom/ts-security-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];security.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];security.controller.SecurityController[findAllSecurityConfig,create,update,check,delete,home];security.init.InitData[run];security.repository.SecurityRepository[findById,deleteById,findByName,findAll];security.SecurityApplication[restTemplate,main];security.service.SecurityService[addNewSecurityConfig,findAllSecurityConfig,modifySecurityConfig,check,deleteSecurityConfig];security.service.SecurityServiceImpl[addNewSecurityConfig,getServiceUrl,findAllSecurityConfig,getSecurityOrderInfoFromOrder,modifySecurityConfig,check,getSecurityOrderOtherInfoFromOrder,deleteSecurityConfig];security.controller.SecurityControllerTest[testHome,testDelete,testFindAllSecurityConfig,testCreate,setUp,testUpdate,testCheck];security.service.SecurityServiceImplTest[testFindAllSecurityConfig1,testModifySecurityConfig1,testDeleteSecurityConfig2,testFindAllSecurityConfig2,testDeleteSecurityConfig1,testModifySecurityConfig2,setUp,testAddNewSecurityConfig2,testAddNewSecurityConfig1,testCheck];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-security-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 11188
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 11188
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-food-service
spec:
  selector:
    matchLabels:
      app: ts-station-food-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-food-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-station-food-service
          image: codewisdom/ts-station-food-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];food.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];food.controller.StationFoodController[getFoodStoresOfStation,getFoodStoresByStationNames,getFoodListByStationFoodStoreId,getAllFoodStores,home];food.init.InitData[run,toFoodList];food.repository.StationFoodRepository[findByStationNameIn,findByStationName,findById,deleteById,findAll];food.service.StationFoodService[getFoodStoresByStationNames,createFoodStore,listFoodStores,getStaionFoodStoreById,listFoodStoresByStationName];food.service.StationFoodServiceImpl[getFoodStoresByStationNames,createFoodStore,listFoodStores,getStaionFoodStoreById,listFoodStoresByStationName];food.StationFoodApplication[restTemplate,main];food.controller.StationFoodControllerTest[testHome,setUp,testGetFoodStoresByStationNames,testGetAllFoodStores,testGetFoodStoresOfStation];food.service.StationFoodServiceImplTest[testCreateFoodStore1,testCreateFoodStore2,testListFoodStoresByStationName1,testListFoodStoresByStationName2,testGetFoodStoresByStationNames1,setUp,testListFoodStores2,testGetFoodStoresByStationNames2,testListFoodStores1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-station-food-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 18855
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 18855
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-service
spec:
  selector:
    matchLabels:
      app: ts-station-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-station-service
          image: codewisdom/ts-station-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];fdse.microservice.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];fdse.microservice.controller.StationController[queryForIdBatch,queryForStationId,query,create,update,queryForNameBatch,delete,home,queryById];fdse.microservice.init.InitData[run];fdse.microservice.repository.StationRepository[findByNames,findById,findByName,findAll];fdse.microservice.service.StationService[exist,queryForIdBatch,query,create,update,queryByIdBatch,queryForId,delete,queryById];fdse.microservice.service.StationServiceImpl[exist,queryForIdBatch,query,create,update,queryByIdBatch,queryForId,delete,queryById];fdse.microservice.StationApplication[restTemplate,main];fdse.microservice.controller.StationControllerTest[testHome,testDelete,testQueryForStationId,testQuery,testCreate,testQueryForIdBatch,testQueryById,setUp,testQueryForNameBatch,testUpdate];fdse.microservice.service.StationServiceImplTest[testQuery1,testCreate2,testCreate1,testQuery2,testExist2,testExist1,testQueryByIdBatch1,testQueryByIdBatch2,testQueryForId1,testQueryForId2,testUpdate1,testDelete2,testUpdate2,testDelete1,setUp,testQueryForIdBatch2,testQueryById1,testQueryById2,testQueryForIdBatch1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-station-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12345
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12345
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-service
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-ticket-office-service
          image: codewisdom/ts-ticket-office-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: 
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-ticket-office-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16108
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16108
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-food-service
spec:
  selector:
    matchLabels:
      app: ts-train-food-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-food-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-train-food-service
          image: codewisdom/ts-train-food-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];trainFood.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];trainFood.controller.TrainFoodController[getTrainFoodOfTrip,getAllTrainFood,home];trainFood.init.InitData[run,toFoodList];trainFood.repository.TrainFoodRepository[findById,deleteById,findAll,findByTripId];trainFood.service.TrainFoodService[listTrainFood,createTrainFood,listTrainFoodByTripId];trainFood.service.TrainFoodServiceImpl[listTrainFood,createTrainFood,listTrainFoodByTripId];trainFood.TrainFoodApplication[restTemplate,main];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-train-food-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 19999
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 19999
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-service
spec:
  selector:
    matchLabels:
      app: ts-train-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-train-service
          image: codewisdom/ts-train-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];train.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];train.controller.TrainController[retrieveByName,query,create,retrieve,update,delete,home];train.init.InitData[run];train.repository.TrainTypeRepository[findByNames,findById,deleteById,findByName,findAll];train.service.TrainService[retrieveByNames,retrieveByName,query,create,retrieve,update,delete];train.service.TrainServiceImpl[retrieveByNames,retrieveByName,query,create,retrieve,update,delete];train.TrainApplication[restTemplate,main];train.controller.TrainControllerTest[testHome,testQuery1,testCreate2,testCreate1,testQuery2,testUpdate1,testDelete2,testUpdate2,testDelete1,setUp,testRetrieve2,testRetrieve1];train.service.TrainServiceImplTest[testCreate2,testCreate1,testQuery,testUpdate1,testDelete2,testUpdate2,testDelete1,setUp,testRetrieve2,testRetrieve1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-train-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 14567
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 14567
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-plan-service
spec:
  selector:
    matchLabels:
      app: ts-travel-plan-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-plan-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-travel-plan-service
          image: codewisdom/ts-travel-plan-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];travelplan.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];travelplan.controller.TravelPlanController[getByMinStation,getByCheapest,getByQuickest,getTransferResult,home];travelplan.service.TravelPlanService[getQuickest,getMinStation,getCheapest,getTransferSearch];travelplan.service.TravelPlanServiceImpl[getRestTicketNumber,tripsFromHighSpeed,getServiceUrl,getRoutePlanResultMinStation,getQuickest,getMinStation,getCheapest,queryTrainTypeByName,tripsFromNormal,getTransferSearch,getRoutePlanResultCheapest,getRoutePlanResultQuickest];travelplan.TravelPlanApplication[restTemplate,main];travelplan.controller.TravelPlanControllerTest[testHome,testGetByQuickest,testGetByCheapest,setUp,testGetByMinStation,testGetTransferResult];travelplan.service.TravelPlanServiceImplTest[testGetTransferSearch,testGetQuickest,testGetCheapest,testGetMinStation,setUp];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 14322
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 14322
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-service
spec:
  selector:
    matchLabels:
      app: ts-travel-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-travel-service
          image: codewisdom/ts-travel-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];travel.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];travel.controller.TravelController[getTripAllDetailInfo,adminQueryAll,queryAll,getTripsByRouteId,home,getRouteByTripId,updateTrip,queryInfoInparallel,retrieve,createTrip,deleteTrip,queryInfo,getTrainTypeByTripId];travel.init.InitData[run];travel.repository.TripRepository[deleteByTripId,findByTripId,findAll,findByRouteId];travel.service.TravelService[query,getTripAllDetailInfo,update,adminQueryAll,queryAll,delete,queryByBatch,getRouteByTripId,queryInParallel,create,retrieve,getTripByRoute,getTrainTypeByTripId];travel.service.TravelServiceImpl[getRestTicketNumber,getServiceUrl,getTickets,getRouteByRouteId,query,getTripAllDetailInfo,update,adminQueryAll,setResponse,queryAll,delete,queryByBatch,getRouteByTripId,afterToday,getTicketsByBatch,queryInParallel,create,getTripByRoute,retrieve,getTrainTypeByTripId,getTrainTypeByName];travel.service.MyCallable[call];travel.TravelApplication[restTemplate,main];travel.controller.TravelControllerTest[testQueryAll,testAdminQueryAll,testGetTripAllDetailInfo,testUpdateTrip,testGetTripsByRouteId,testHome,testGetRouteByTripId,testRetrieve,setUp,testGetTrainTypeByTripId,testDeleteTrip,testQueryInfo2,testCreateTrip,testQueryInfo1];travel.service.TravelServiceImplTest[testCreate2,testCreate1,testGetTripAllDetailInfo,testQueryAll2,testRetrieve2,testQueryAll1,testRetrieve1,testQuery,testUpdate1,testDelete2,testUpdate2,testDelete1,setUp,testAdminQueryAll2,testGetRouteByTripId2,testGetTrainTypeByTripId,testGetTripByRoute2,testGetTripByRoute1,testAdminQueryAll1,testGetRouteByTripId1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-travel-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12346
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12346
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-service
spec:
  selector:
    matchLabels:
      app: ts-travel2-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-travel2-service
          image: codewisdom/ts-travel2-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];travel2.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];travel2.controller.Travel2Controller[getRouteByTripId,updateTrip,getTripAllDetailInfo,retrieve,adminQueryAll,queryAll,createTrip,deleteTrip,getTripsByRouteId,queryInfo,home,getTrainTypeByTripId];travel2.init.InitData[run];travel2.repository.TripRepository[deleteByTripId,findByTripId,findAll,findByRouteId];travel2.service.TravelService[getRouteByTripId,query,getTripAllDetailInfo,create,retrieve,update,getTripByRoute,adminQueryAll,queryAll,delete,queryByBatch,getTrainTypeByTripId];travel2.service.TravelServiceImpl[getRestTicketNumber,getServiceUrl,getTickets,getRouteByRouteId,query,getTripAllDetailInfo,update,adminQueryAll,setResponse,queryAll,delete,queryByBatch,getRouteByTripId,afterToday,getTicketsByBatch,getTripByRoute,create,retrieve,getTrainTypeByTripId,getTrainTypeByName];travel2.Travel2Application[restTemplate,main];travel2.controller.TravelControllerTest[testQueryAll,testAdminQueryAll,testGetTripAllDetailInfo,testUpdateTrip,testGetTripsByRouteId,testHome,testGetRouteByTripId,testRetrieve,setUp,testGetTrainTypeByTripId,testDeleteTrip,testQueryInfo2,testCreateTrip,testQueryInfo1];travel2.service.TravelServiceImplTest[testCreate2,testCreate1,testGetTripAllDetailInfo,testQueryAll2,testRetrieve2,testQueryAll1,testRetrieve1,testQuery,testUpdate1,testDelete2,testUpdate2,testDelete1,setUp,testAdminQueryAll2,testGetRouteByTripId2,testGetTrainTypeByTripId,testGetTripByRoute2,testGetTripByRoute1,testAdminQueryAll1,testGetRouteByTripId1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-travel2-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16346
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16346
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-service
spec:
  selector:
    matchLabels:
      app: ts-user-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-user-service
          image: codewisdom/ts-user-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];user.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];user.controller.UserController[getUserByUserName,registerUser,getAllUser,updateUser,getUserByUserId,testHello,deleteUserById];user.init.InitUser[run];user.repository.UserRepository[findByUserName,findByUserId,findAll,deleteByUserId];user.service.impl.UserServiceImpl[getServiceUrl,deleteUserAuth,createDefaultAuthUser];user.service.UserService[getAllUsers,findByUserName,findByUserId,deleteUser,updateUser,saveUser];user.UserApplication[restTemplate,main];user.controller.UserControllerTest[testHome,testGetUserByUserName,testGetUserByUserId,testGetAllUser,testUpdateUser,setUp,testDeleteUserById,testRegisterUser];user.service.UserServiceImplTest[testDeleteUserAuth,testGetAllUsers1,testGetAllUsers2,testFindByUserId1,testFindByUserId2,testFindByUserName1,testDeleteUser2,testFindByUserName2,testDeleteUser1,testSaveUser,setUp,testUpdateUser2,testUpdateUser1];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-user-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 12342
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 12342
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-verification-code-service
spec:
  selector:
    matchLabels:
      app: ts-verification-code-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-verification-code-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-verification-code-service
          image: codewisdom/ts-verification-code-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];verifycode.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];verifycode.controller.VerifyCodeController[verifyCode,imageCode];verifycode.service.impl.VerifyCodeServiceImpl[verifyCode,getRandColor,getImageCode];verifycode.service.VerifyCodeService[verifyCode,getImageCode];verifycode.util.CookieUtil[readCookieMap,addCookie,getCookieByName];verifycode.VerifyCodeApplication[restTemplate,main];verifycode.controller.VerifyCodeControllerTest[setUp,testImageCode,testVerifyCode];verifycode.service.VerifyCodeServiceImplTest[testGetImageCode,testVerifyCode];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 15678
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 15678
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-service
spec:
  selector:
    matchLabels:
      app: ts-voucher-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-service
    spec:
      containers:
        - name: ts-voucher-service
          image: codewisdom/ts-voucher-service:1.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          envFrom:
            - secretRef:
                name: ts-voucher-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 16101
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 16101
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-wait-order-service
spec:
  selector:
    matchLabels:
      app: ts-wait-order-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-wait-order-service
    spec:
      volumes:
        - name: otel-agent
          emptyDir: {}
      initContainers:
        - name: agent-container
          image: alpine
          volumeMounts:
            - name: otel-agent
              mountPath: /agent
          command: [ "/bin/sh" ]
          args: [ "-c", "cd /agent && wget https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.30.0/opentelemetry-javaagent.jar" ]
      containers:
        - name: ts-wait-order-service
          image: codewisdom/ts-wait-order-service:1.0.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: OTEL_INSTRUMENTATION_METHODS_INCLUDE
              value: "edu.fudan.common.config.SwaggerConfig[createRestApi,apiInfo];edu.fudan.common.entity.Contacts[hashCode,equals];edu.fudan.common.entity.LeftTicketInfo[toString];edu.fudan.common.entity.Order[hashCode,equals];edu.fudan.common.entity.TripId[toString];edu.fudan.common.security.jwt.JWTFilter[doFilterInternal];edu.fudan.common.security.jwt.JWTUtil[getJWTAuthentication,getTokenFromHeader,getRole,getUserName,getClaims,validateToken];edu.fudan.common.util.JsonUtils[jsonToMap,json2Object,object2Json,conveterObject,object2Map];edu.fudan.common.util.StringUtils[String2Lower,Date2String,String2Date];waitorder.config.SecurityConfig[passwordEncoder,corsConfigurer,configure];waitorder.controller.WaitListOrderController[createNewOrder,home,getAllOrders,getWaitListOrders];waitorder.entity.WaitListOrder[hashCode];waitorder.repository.WaitListOrderRepository[findByAccountId,findById,deleteById,findAll];waitorder.service.Impl.WaitListOrderServiceImpl[modifyWaitListOrderStatus,triggerThread,saveNewOrder,create,updateOrder,WaitListOrderExist,findOrderById,getAllOrders,getAllWaitListOrders];waitorder.service.WaitListOrderService[modifyWaitListOrderStatus,create,updateOrder,findOrderById,getAllOrders,getAllWaitListOrders];waitorder.utils.PollThread[getServiceUrl,doPreserve,run];waitorder.WaitOrderApplication[restTemplate,main];waitorder.service.Impl.WaitListOrderServiceImplTest[setUp,findOrderById,getAllOrders];waitorder.WaitOrderApplicationTests[contextLoads];"
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://otelcol:4317
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          envFrom:
            - secretRef:
                name: ts-wait-order-mysql
            - configMapRef:
                name: nacos
          ports:
            - containerPort: 17525
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
            limits:
              cpu: 500m
              memory: 2000Mi
          readinessProbe:
            tcpSocket:
              port: 17525
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ui-dashboard
spec:
  selector:
    matchLabels:
      app: ts-ui-dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ui-dashboard
    spec:
      containers:
        - name: ts-ui-dashboard
          image: codewisdom/ts-ui-dashboard:1.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 500m
              memory: 500Mi
